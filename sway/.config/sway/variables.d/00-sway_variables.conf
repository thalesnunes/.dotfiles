### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $alt Mod1

# Executables and config directories
set $bin ${XDG_USER_BIN}
set $config ${XDG_CONFIG_HOME}

# Your preferred terminal emulator
set $terminal wezterm

# Add --to-code to bindsym, support for non-latin layouts
set $bindsym bindsym --to-code

# Onscreen bar
set $onscreen_bar $bin/onscreen_bar

# brightness control
set $brightness_up brightnessctl set +10% && $onscreen_bar Brightness $(echo "$(brightnessctl get) * 100 / $(brightnessctl max)" | bc)
set $brightness_down brightnessctl set 10%- && $onscreen_bar Brightness $(echo "$(brightnessctl get) * 100 / $(brightnessctl max)" | bc)
set $brightness_max brightnessctl set 100% && $onscreen_bar Brightness $(echo "$(brightnessctl get) * 100 / $(brightnessctl max)" | bc)
set $brightness_min brightnessctl set 0% && $onscreen_bar Brightness $(echo "$(brightnessctl get) * 100 / $(brightnessctl max)" | bc)

# Volume control
set $volume_down pulsemixer --change-volume -5 && $onscreen_bar Volume $(pulsemixer --get-volume)
set $volume_up pulsemixer --change-volume +5 && $onscreen_bar Volume $(pulsemixer --get-volume)
set $volume_mute pulsemixer --toggle-mute

# Play and pause control
set $play_pause_toggle playerctl play-pause
set $play_next playerctl next
set $play_previous playerctl previous

# screenshot
set $grimshot /usr/bin/grimshot
set $screenshot_window $grimshot --notify copy anything
set $screenshot_active $grimshot --notify copy active
set $screenshot_output $grimshot --notify copy output

set $screenshot_save wl-paste -t image/png > ${HOME}/Images/Screenshots/$(date +%Y-%m-%d_%H-%M-%S).png
set $screenshot_annotate wl-paste -t image/png | satty -f -

# notifications
set $close_notification makoctl dismiss
set $close_all_notifications makoctl dismiss --all
set $redisplay_last_notification makoctl restore

# Polkit Agent
set $polkit_agent /usr/bin/mate-polkit

# Autostart once
set $cliphist '[ -x "$(command -v wl-paste)" ] && [ -x "$(command -v cliphist)" ] && wl-paste --watch cliphist store'
set $mako '[ -x "$(command -v mako)" ] && mako'
set $udiskie '[ -x "$(command -v udiskie)" ] && udiskie -t'
set $wlsunset '[ -x "$(command -v wlsunset)" ] && wlsunset -l "-23.536215622740578" -L "-46.68497829306198" -t "3500" -T "6500" -d "1800" &'
set $poweralertd '[ -x "$(command -v poweralertd)" ] && pkill poweralertd; poweralertd -s -i "line power" &'

# Autostart always
set $desktop_setup '[ -x "$(command -v desktop_setup)" ] && desktop_setup'

### Idle configuration
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
#
set $lock ~/.config/swaylock/lock.sh
set $idle_timeout 240
set $locking_timeout 300
set $screen_timeout 600
set $idle swayidle -w \
    timeout $idle_timeout 'light -G > /tmp/brightness && light -S 10' resume 'light -S $([ -f /tmp/brightness ] && cat /tmp/brightness || echo 100%)' \
    timeout $locking_timeout $lock \
    timeout $screen_timeout 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"' \
    before-sleep $lock & \
    lock $lock &

set $suspend systemctl suspend

# workspace names
set $ws1 number 1
set $ws2 number 2
set $ws3 number 3
set $ws4 number 4
set $ws5 number 5
set $ws6 number 6
set $ws7 number 7
set $ws8 number 8
set $ws9 number 9
set $ws10 number 10

workspace 1 output HDMI-A-1 eDP-1
workspace 2 output HDMI-A-1 eDP-1
workspace 3 output HDMI-A-1 eDP-1
workspace 4 output HDMI-A-1 eDP-1
workspace 5 output HDMI-A-1 eDP-1
workspace 6 output eDP-1
workspace 7 output eDP-1
workspace 8 output eDP-1
workspace 9 output eDP-1
workspace 10 output eDP-1

# Gambiarra
exec sleep 1 && swaymsg workspace 10 && swaymsg workspace 1

# vim:filetype=i3config
